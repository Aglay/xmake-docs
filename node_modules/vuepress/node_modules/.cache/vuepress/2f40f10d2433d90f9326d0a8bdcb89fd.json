{"remainingRequest":"/Users/ruki/projects/personal/tbox-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/ruki/projects/personal/tbox-docs/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/ruki/projects/personal/tbox-docs/docs/zh/guide/introduction.md?vue&type=template&id=29661056&","dependencies":[{"path":"/Users/ruki/projects/personal/tbox-docs/docs/zh/guide/introduction.md","mtime":1541489249205},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/vue-loader/lib/index.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541484147168}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"简介\"><a class=\"header-anchor\" href=\"#简介\" aria-hidden=\"true\">#</a> 简介</h1>\n<p>TBOX是一个用c语言实现的跨平台开发库。</p>\n<p>针对各个平台，封装了统一的接口，简化了各类开发过程中常用操作，使你在开发过程中，更加关注实际应用的开发，而不是把时间浪费在琐碎的接口兼容性上面，并且充分利用了各个平台独有的一些特性进行优化。</p>\n<p>这个项目的目的，是为了使C开发更加的简单高效。</p>\n<p>目前支持的平台有：</p>\n<ul>\n<li>Windows</li>\n<li>Macosx</li>\n<li>Linux</li>\n<li>Android</li>\n<li>iOS</li>\n</ul>\n<p>通过<a href=\"http://www.xmake.io/cn\" target=\"_blank\" rel=\"noopener noreferrer\">xmake<OutboundLink/></a>支持各种编译模式：</p>\n<ul>\n<li>Release: 正式版编译，禁用调试信息、断言，各种检测机制，启用编译器优化</li>\n<li>Debug: 调试模式，默认启用详细调试信息、断言、内存越界检测、内存泄漏、锁竞争分析等检测机制</li>\n<li>Small: 最小化编译，默认禁用所有扩展模块，启用编译器最小化优化</li>\n<li>Micro: 针对嵌入式平台，仅仅编译tbox微内核，仅提供最基础的跨平台接口，生成库仅64K左右（内置轻量libc接口实现）</li>\n</ul>\n<p>如果你想了解更多，请参考：</p>\n<ul>\n<li><a href=\"http://www.tboox.org/cn\" target=\"_blank\" rel=\"noopener noreferrer\">项目主页<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/tbox/wiki/%E7%9B%AE%E5%BD%95\" target=\"_blank\" rel=\"noopener noreferrer\">在线文档<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/tbox\" target=\"_blank\" rel=\"noopener noreferrer\">Github<OutboundLink/></a></li>\n<li><a href=\"https://gitee.com/tboox/tbox\" target=\"_blank\" rel=\"noopener noreferrer\">Gitee<OutboundLink/></a></li>\n</ul>\n<h2 id=\"特性\"><a class=\"header-anchor\" href=\"#特性\" aria-hidden=\"true\">#</a> 特性</h2>\n<h4 id=\"流库\"><a class=\"header-anchor\" href=\"#流库\" aria-hidden=\"true\">#</a> 流库</h4>\n<p>针对http、file、socket、data等流数据，实现统一接口进行读写，并且支持: 阻塞、非阻塞、异步 三种读写模式。\n支持中间增加多层filter流进行流过滤，实现边读取，内部边进行解压、编码转换、加密等操作，极大的减少了内存使用。</p>\n<p>主要提供以下模块：</p>\n<ul>\n<li><code>stream</code>：通用非阻塞流，用于一般的单独io处理，同时支持协程以实现异步传输。</li>\n<li><code>transfer</code>：流传输器，维护两路流的传输。</li>\n<li><code>static_stream</code>：针对静态数据buffer优化的静态流，用于轻量快速的数据解析。</li>\n</ul>\n<h4 id=\"协程库\"><a class=\"header-anchor\" href=\"#协程库\" aria-hidden=\"true\">#</a> 协程库</h4>\n<ul>\n<li>快速高效的协程切换支持（具体性能参考：<a href=\"http://tboox.org/cn/2016/10/28/benchbox-coroutine/\" target=\"_blank\" rel=\"noopener noreferrer\">基准测试报告<OutboundLink/></a>）</li>\n<li>提供跨平台支持，核心切换算法参考boost，并且对其进行重写和优化，目前支持架构：x86, x86_64, arm, arm64, mips32</li>\n<li>提供channel协程间数据通信支持，基于生产、消费者模型</li>\n<li>提供信号量、协程锁支持</li>\n<li>socket、stream都模块原生支持协程，并且可在线程和协程间进行无缝切换</li>\n<li>提供http、file等基于协程的简单服务器实例，只需几百行代码，就可以从socket开始写个高性能io服务器，代码逻辑比异步回调模式更加清晰</li>\n<li>同时提供stackfull, stackless两种协程模式支持，stackless协程更加的轻量（每个协程只占用几十个bytes），切换更快（会牺牲部分易用性）</li>\n<li>支持epoll, kqueue, poll, select 和 IOCP</li>\n</ul>\n<h4 id=\"数据库\"><a class=\"header-anchor\" href=\"#数据库\" aria-hidden=\"true\">#</a> 数据库</h4>\n<ul>\n<li>统一并简化数据库操作接口，适配各种数据源，通过统一的url来自动连接打开支持的数据库，数据的枚举采用迭代器模型。</li>\n<li>目前支持sqlite3以及mysql两种关系型数据库，也可自定义扩展使用其他关系型数据库。</li>\n</ul>\n<h4 id=\"xml库\"><a class=\"header-anchor\" href=\"#xml库\" aria-hidden=\"true\">#</a> xml库</h4>\n<ul>\n<li>针对xml提供DOM和SAX两种解析模式，SAX方式采用外部迭代模式，灵活性和性能更高，并且可以选择指定路径，进行解析。</li>\n<li>解析过程完全基于stream，所以是高度流化的，可以实现边下载、边解压、边转码、边解析一条龙服务，使用较低的内存也可以解析大规模数据。</li>\n<li>提供xml writer以支持对xml生成</li>\n</ul>\n<h4 id=\"内存库\"><a class=\"header-anchor\" href=\"#内存库\" aria-hidden=\"true\">#</a> 内存库</h4>\n<ul>\n<li>参考linux内核内存管理机制的实现，并对其进行各种改造和优化，所实现的TBOX独有的一整套内存池管理架构。</li>\n<li>调试模式下，可以轻松检测并定位内存泄露、内存越界溢出、内存重叠覆盖等常见内存问题，并对整体内存的使用进行了统计和简要分析。</li>\n<li>针对大块数据、小块数据、字符串数据进行了充分的利用，避免了大量外部碎片和内部碎片的产生。分配操作进行了各种优化，96%的情况下，效率都是在O(1)。</li>\n</ul>\n<h4 id=\"容器库\"><a class=\"header-anchor\" href=\"#容器库\" aria-hidden=\"true\">#</a> 容器库</h4>\n<ul>\n<li>提供哈希、链表、数组、队列、堆栈、最小最大堆等常用容器。</li>\n<li>支持各种常用成员类型，在原有的容器期初上，其成员类型还可以完全自定义扩展。</li>\n<li>所有容器都支持迭代器操作。</li>\n<li>大部分容器都可以支持基于stream的序列化和反序列化操作。</li>\n</ul>\n<h4 id=\"算法库\"><a class=\"header-anchor\" href=\"#算法库\" aria-hidden=\"true\">#</a> 算法库</h4>\n<ul>\n<li>提供各种排序算法：冒泡排序、堆排序、快速排序、插入排序。</li>\n<li>提供各种查找算法：线性遍历、二分法搜索。</li>\n<li>提供各种遍历、删除、统计算法。</li>\n<li>以迭代器为接口，实现算法和容器的分离，类似stl，但是c实现的，更加轻量。</li>\n</ul>\n<h4 id=\"网络库\"><a class=\"header-anchor\" href=\"#网络库\" aria-hidden=\"true\">#</a> 网络库</h4>\n<ul>\n<li>实现http客户端模块</li>\n<li>实现cookies</li>\n<li>实现dns解析与缓存</li>\n<li>实现ssl(支持openssl, polarssl, mbedtls)</li>\n<li>支持ipv4、ipv6</li>\n<li>支持通过协程实现异步模式</li>\n</ul>\n<h4 id=\"数学运算库\"><a class=\"header-anchor\" href=\"#数学运算库\" aria-hidden=\"true\">#</a> 数学运算库</h4>\n<ul>\n<li>提供各种精度的定点运算支持</li>\n<li>提供随机数生成器</li>\n</ul>\n<h4 id=\"libc库\"><a class=\"header-anchor\" href=\"#libc库\" aria-hidden=\"true\">#</a> libc库</h4>\n<ul>\n<li>libc的一个轻量级实现，完全跨平台，并且针对不同架构进行了优化。</li>\n<li>支持大部分字符串、宽字符串操作。</li>\n<li>扩展字符串、宽字符串的各种大小写不敏感操作接口</li>\n<li>扩展<code>memset_u16</code>、<code>memset_u32</code>等接口，并对其进行高度优化，尤其适合图形渲染程序</li>\n</ul>\n<h4 id=\"libm库\"><a class=\"header-anchor\" href=\"#libm库\" aria-hidden=\"true\">#</a> libm库</h4>\n<ul>\n<li>libm部分接口的一个轻量级实现，以及对常用系统接口的封装。（目前只实现了部分，之后有时间会完全实现掉）</li>\n<li>扩展部分常用接口，增加对sqrt、log2等常用函数的整数版本计算，进行高度优化，不涉及浮点运算，适合嵌入式环境使用。</li>\n</ul>\n<h4 id=\"object库\"><a class=\"header-anchor\" href=\"#object库\" aria-hidden=\"true\">#</a> object库</h4>\n<ul>\n<li>轻量级类apple的CoreFoundation库，支持object、dictionary、array、string、number、date、data等常用对象，并且可以方便扩展自定义对象的序列化。</li>\n<li>支持对xml、json、binary以及apple的plist(xplist/bplist)格式序列化和反序列化。\n并且实现自有的binary序列化格式， 针对明文进行了简单的加密，在不影响性能的前提下，序列化后的大小比bplist节省30%。</li>\n</ul>\n<h4 id=\"平台库\"><a class=\"header-anchor\" href=\"#平台库\" aria-hidden=\"true\">#</a> 平台库</h4>\n<ul>\n<li>提供file、directory、socket、thread、time等常用系统接口</li>\n<li>提供atomic、atomic64接口</li>\n<li>提供高精度、低精度定时器</li>\n<li>提供高性能的线程池操作</li>\n<li>提供event、mutex、semaphore、spinlock等事件、互斥、信号量、自旋锁操作</li>\n<li>提供获取函数堆栈信息的接口，方便调试和错误定位</li>\n<li>提供跨平台动态库加载接口（如果系统支持的话）</li>\n<li>提供io轮询器，针对epoll, poll, select, kqueue进行跨平台封装</li>\n<li>提供跨平台上下文切换接口，主要用于协程实现，切换效率非常高</li>\n</ul>\n<h4 id=\"压缩库\"><a class=\"header-anchor\" href=\"#压缩库\" aria-hidden=\"true\">#</a> 压缩库</h4>\n<ul>\n<li>支持zlib/zlibraw/gzip的压缩与解压（需要第三方zlib库支持）。</li>\n</ul>\n<h4 id=\"字符编码库\"><a class=\"header-anchor\" href=\"#字符编码库\" aria-hidden=\"true\">#</a> 字符编码库</h4>\n<ul>\n<li>支持utf8、utf16、gbk、gb2312、uc2、uc4 之间的互相转码，并且支持大小端格式。</li>\n</ul>\n<h4 id=\"实用工具库\"><a class=\"header-anchor\" href=\"#实用工具库\" aria-hidden=\"true\">#</a> 实用工具库</h4>\n<ul>\n<li>实现base64/32编解码</li>\n<li>实现crc32、adler32、md5、sha1等常用hash算法</li>\n<li>实现日志输出、断言等辅助调试工具</li>\n<li>实现url编解码</li>\n<li>实现位操作相关接口，支持各种数据格式的解析，可以对8bits、16bits、32bits、64bits、float、double以及任意bits的字段进行解析操作，并且同时支持大端、小端和本地端模式，并针对部分操作进行了优化，像static_stream、stream都有相关接口对其进行了封装，方便在流上进行快速数据解析。</li>\n<li>实现swap16、swap32、swap64等位交换操作，并针对各个平台进行了优化。</li>\n<li>实现一些高级的位处理接口，例如：位0的快速统计、前导0和前导1的快速位计数、后导01的快速位计数</li>\n<li>实现单例模块，可以对静态对象、实例对象进行快速的单例封装，实现全局线程安全</li>\n<li>实现option模块，对命令行参数进行解析，提供快速方便的命令行选项建立和解析操作，对于写终端程序还是很有帮助的</li>\n</ul>\n<h4 id=\"正则表达式库\"><a class=\"header-anchor\" href=\"#正则表达式库\" aria-hidden=\"true\">#</a> 正则表达式库</h4>\n<ul>\n<li>支持匹配和替换操作</li>\n<li>支持全局、多行、大小写不敏感等模式</li>\n<li>使用pcre, pcre2和posix正则库</li>\n</ul>\n<h2 id=\"项目例子\"><a class=\"header-anchor\" href=\"#项目例子\" aria-hidden=\"true\">#</a> 项目例子</h2>\n<p>一些使用tbox的项目</p>\n<ul>\n<li><a href=\"https://github.com/tboox/gbox\" target=\"_blank\" rel=\"noopener noreferrer\">gbox<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/vm86\" target=\"_blank\" rel=\"noopener noreferrer\">vm86<OutboundLink/></a></li>\n<li><a href=\"http://www.xmake.io/cn\" target=\"_blank\" rel=\"noopener noreferrer\">xmake<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/itrace\" target=\"_blank\" rel=\"noopener noreferrer\">itrace<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/tbox/wiki/%E4%BD%BF%E7%94%A8tbox%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93\" target=\"_blank\" rel=\"noopener noreferrer\">更多项目<OutboundLink/></a></li>\n</ul>\n<h2 id=\"联系方式\"><a class=\"header-anchor\" href=\"#联系方式\" aria-hidden=\"true\">#</a> 联系方式</h2>\n<ul>\n<li>邮箱：<a href=\"mailto:waruqi@gmail.com\">waruqi@gmail.com</a></li>\n<li>主页：<a href=\"http://www.tboox.org/cn\" target=\"_blank\" rel=\"noopener noreferrer\">TBOOX开源工程<OutboundLink/></a></li>\n<li>社区：<a href=\"https://www.reddit.com/r/tboox/\" target=\"_blank\" rel=\"noopener noreferrer\">Reddit论坛<OutboundLink/></a></li>\n<li>QQ群：343118190</li>\n<li>微信公众号：tboox-os</li>\n</ul>\n</div>\n",null]}