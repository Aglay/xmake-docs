{"remainingRequest":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/ruki/projects/personal/xmake-docs/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/ruki/projects/personal/xmake-docs/src/guide/faq.md?vue&type=template&id=ddec2fba&","dependencies":[{"path":"/Users/ruki/projects/personal/xmake-docs/src/guide/faq.md","mtime":1541582363508},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/index.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541484147168}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Get the help info of the main command.\")]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _c(\"p\", [_vm._v(\"Get the help info of the configuration command.\")]),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _c(\"p\", [\n      _vm._v(\"Get the help info of the givent action or plugin command.\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _c(\"p\", [_vm._v(\"For example:\")]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"Please attempt to clean configuration and rebuild it first.\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"For exmaple:\")]),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _c(\"p\", [\n      _vm._v(\"And add \"),\n      _c(\"code\", [_vm._v(\"--backtrace\")]),\n      _vm._v(\n        \" to get the verbose backtrace info, then you can submit these infos to \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake/issues\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"issues\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"You only need run the following command:\")]),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _c(\"p\", [\n      _vm._v(\n        \"xmake will scan all source code in current directory and build it automaticlly.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"And we can run it directly.\")]),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _c(\"p\", [\n      _vm._v(\"If we only want to generate xmake.lua file, we can run:\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _c(\"p\", [\n      _vm._v(\"If you want to known more information please see \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://tboox.org/2017/01/07/build-without-makefile/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [\n          _vm._v(\"Scan source codes and build project without makefile\"),\n          _c(\"OutboundLink\")\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"faq\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#faq\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" FAQ\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h2\",\n      { attrs: { id: \"how-to-get-verbose-command-line-arguments-info\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#how-to-get-verbose-command-line-arguments-info\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" How to get verbose command-line arguments info?\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-h\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"--help\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-h\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"--help\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"action\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"plugin\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-h\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"--help\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake run --help\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"how-to-suppress-all-output-info\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#how-to-suppress-all-output-info\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" How to suppress all output info?\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-q\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"--quiet\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"how-to-do-if-xmake-fails\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#how-to-do-if-xmake-fails\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" How to do if xmake fails?\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake f -c\\n$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"If it fails again, please add \"),\n      _c(\"code\", [_vm._v(\"-v\")]),\n      _vm._v(\" or \"),\n      _c(\"code\", [_vm._v(\"--verbose\")]),\n      _vm._v(\" options to get more verbose info.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-hash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake [-v|--verbose] \\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake -v --backtrace\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h2\",\n      { attrs: { id: \"how-to-see-verbose-compiling-warnings\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#how-to-see-verbose-compiling-warnings\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" How to see verbose compiling warnings?\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-w\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"--warning\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h2\",\n      {\n        attrs: {\n          id: \"how-to-scan-source-code-and-generate-xmake-lua-automaticlly\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#how-to-scan-source-code-and-generate-xmake-lua-automaticlly\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" How to scan source code and generate xmake.lua automaticlly\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake run\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake f -y\\n\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}