{"remainingRequest":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/ruki/projects/personal/xmake-docs/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/ruki/projects/personal/xmake-docs/src/guide/faq.md?vue&type=template&id=ddec2fba&","dependencies":[{"path":"/Users/ruki/projects/personal/xmake-docs/src/guide/faq.md","mtime":1541582363508},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/index.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541484147168}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"faq\"><a class=\"header-anchor\" href=\"#faq\" aria-hidden=\"true\">#</a> FAQ</h1>\n<h2 id=\"how-to-get-verbose-command-line-arguments-info\"><a class=\"header-anchor\" href=\"#how-to-get-verbose-command-line-arguments-info\" aria-hidden=\"true\">#</a> How to get verbose command-line arguments info?</h2>\n<p>Get the help info of the main command.</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake <span class=\"token punctuation\">[</span>-h<span class=\"token operator\">|</span>--help<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Get the help info of the configuration command.</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake f <span class=\"token punctuation\">[</span>-h<span class=\"token operator\">|</span>--help<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Get the help info of the givent action or plugin command.</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake <span class=\"token punctuation\">[</span>action<span class=\"token operator\">|</span>plugin<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-h<span class=\"token operator\">|</span>--help<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>For example:</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake run --help\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"how-to-suppress-all-output-info\"><a class=\"header-anchor\" href=\"#how-to-suppress-all-output-info\" aria-hidden=\"true\">#</a> How to suppress all output info?</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake <span class=\"token punctuation\">[</span>-q<span class=\"token operator\">|</span>--quiet<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"how-to-do-if-xmake-fails\"><a class=\"header-anchor\" href=\"#how-to-do-if-xmake-fails\" aria-hidden=\"true\">#</a> How to do if xmake fails?</h2>\n<p>Please attempt to clean configuration and rebuild it first.</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake f -c\n$ xmake\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>If it fails again, please add <code>-v</code> or <code>--verbose</code> options to get more verbose info.</p>\n<p>For exmaple:</p>\n<!--beforebegin--><div class=\"language-hash extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>$ xmake [-v|--verbose] \n</code></pre>\n<!--beforeend--></div><!--afterend--><p>And add <code>--backtrace</code> to get the verbose backtrace info, then you can submit these infos to <a href=\"https://github.com/tboox/xmake/issues\" target=\"_blank\" rel=\"noopener noreferrer\">issues<OutboundLink/></a>.</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake -v --backtrace\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"how-to-see-verbose-compiling-warnings\"><a class=\"header-anchor\" href=\"#how-to-see-verbose-compiling-warnings\" aria-hidden=\"true\">#</a> How to see verbose compiling warnings?</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake <span class=\"token punctuation\">[</span>-w<span class=\"token operator\">|</span>--warning<span class=\"token punctuation\">]</span> \n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"how-to-scan-source-code-and-generate-xmake-lua-automaticlly\"><a class=\"header-anchor\" href=\"#how-to-scan-source-code-and-generate-xmake-lua-automaticlly\" aria-hidden=\"true\">#</a> How to scan source code and generate xmake.lua automaticlly</h2>\n<p>You only need run the following command:</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>xmake will scan all source code in current directory and build it automaticlly.</p>\n<p>And we can run it directly.</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake run\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>If we only want to generate xmake.lua file, we can run:</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ xmake f -y\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>If you want to known more information please see <a href=\"http://tboox.org/2017/01/07/build-without-makefile/\" target=\"_blank\" rel=\"noopener noreferrer\">Scan source codes and build project without makefile<OutboundLink/></a></p>\n</div>\n",null]}