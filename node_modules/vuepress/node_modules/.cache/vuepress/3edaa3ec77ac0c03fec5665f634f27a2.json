{"remainingRequest":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/ruki/projects/personal/xmake-docs/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/ruki/projects/personal/xmake-docs/src/guide/getting-started.md?vue&type=template&id=d7bc09fe&","dependencies":[{"path":"/Users/ruki/projects/personal/xmake-docs/src/guide/getting-started.md","mtime":1541598674687},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vue-loader/lib/index.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/xmake-docs/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541484147168}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _vm._v(\"Download xmake windows installer from \"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://github.com/tboox/xmake/releases\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"Releases\"), _c(\"OutboundLink\")],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"Run xmake-[version].exe\")])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"On Archlinux:\")]),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _c(\"p\", [_vm._v(\"On Ubuntu:\")]),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _c(\"p\", [_vm._v(\"Or add xmake package source manually:\")]),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _c(\"p\", [_vm._v(\"Then we run:\")]),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _c(\"p\", [_vm._v(\"Or download deb package to install it:\")]),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _vm._v(\"Download xmake \"),\n        _c(\"code\", [_vm._v(\".deb\")]),\n        _vm._v(\" install package from \"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://github.com/tboox/xmake/releases\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"Releases\"), _c(\"OutboundLink\")],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _vm._m(17)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Compile and install:\")]),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _c(\"p\", [_vm._v(\"Only install and update lua scripts:\")]),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _c(\"p\", [_vm._v(\"Uninstall:\")]),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _c(\"p\", [_vm._v(\"Or compile and install via make:\")]),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _c(\"p\", [_vm._v(\"Install to other given directory:\")]),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _c(\"p\", [_vm._v(\"Uninstall:\")]),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://asciinema.org/a/133693\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [\n          _c(\"img\", {\n            attrs: {\n              src: \"https://asciinema.org/a/133693.png\",\n              alt: \"asciicast\"\n            }\n          }),\n          _c(\"OutboundLink\")\n        ],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _c(\"p\", [\n      _vm._v(\"And xmake will generate some files for c language project:\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _c(\"p\", [_vm._v(\"Support languages:\")]),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tip\" }, [\n      _vm._v(\n        \"\\n    If you want to known more options, please run: `xmake create --help`\\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._m(37),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _c(\"p\", [\n      _vm._v(\n        \"It will start the debugger (.e.g lldb, gdb, windbg, vsjitdebugger, ollydbg ..) to load our program.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(39),\n    _c(\"p\", { staticClass: \"tip\" }, [\n      _vm._v(\n        \"\\n    You can also use short command option, for exmaple: `xmake r` or `xmake run`\\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(40),\n    _vm._v(\" \"),\n    _vm._m(41),\n    _vm._v(\" \"),\n    _vm._m(42),\n    _vm._m(43),\n    _vm._v(\" \"),\n    _vm._m(44),\n    _vm._m(45),\n    _vm._v(\" \"),\n    _vm._m(46),\n    _vm._v(\" \"),\n    _vm._m(47),\n    _vm._m(48),\n    _vm._v(\" \"),\n    _vm._m(49),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Create an empty project:\")]),\n    _vm._v(\" \"),\n    _vm._m(50),\n    _c(\"p\", [\n      _vm._v(\n        \"xmake will detect Qt SDK automatically and we can also set the SDK directory manually.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(51),\n    _c(\"p\", [\n      _vm._v(\n        \"If you want to use the MinGW Qt environment on windows, you can set the MinGW platform configuration and specify the SDK path for the MinGW compilation environment, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(52),\n    _c(\"p\", [\n      _vm._v(\"If you want to known more information, you can see \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake/issues/160\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"#160\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(53),\n    _vm._v(\" \"),\n    _vm._m(54),\n    _vm._m(55),\n    _vm._v(\" \"),\n    _vm._m(56),\n    _vm._m(57),\n    _vm._v(\" \"),\n    _vm._m(58),\n    _vm._m(59),\n    _vm._v(\" \"),\n    _vm._m(60),\n    _vm._m(61),\n    _vm._v(\" \"),\n    _vm._m(62),\n    _vm._m(63),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Create an empty project:\")]),\n    _vm._v(\" \"),\n    _vm._m(64),\n    _vm._m(65),\n    _c(\"p\", [\n      _vm._v(\n        \"xmake will detect Cuda SDK automatically and we can also set the SDK directory manually.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(66),\n    _c(\"p\", [\n      _vm._v(\"If you want to known more information, you can see \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake/issues/158\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"#158\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(67),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"xmake will detect WDK automatically and we can also set the WDK directory manually.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(68),\n    _c(\"p\", [\n      _vm._v(\"If you want to known more information, you can see \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake/issues/159\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"#159\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(69),\n    _vm._v(\" \"),\n    _vm._m(70),\n    _vm._m(71),\n    _vm._v(\" \"),\n    _vm._m(72),\n    _vm._m(73),\n    _vm._v(\" \"),\n    _vm._m(74),\n    _vm._m(75),\n    _vm._m(76),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"We can run the following command to generate a .cab driver package.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(77),\n    _c(\"p\", [_vm._v(\"The output files like:\")]),\n    _vm._v(\" \"),\n    _vm._m(78),\n    _vm._m(79),\n    _vm._v(\" \"),\n    _vm._m(80),\n    _vm._v(\" \"),\n    _vm._m(81),\n    _vm._v(\" \"),\n    _vm._m(82),\n    _vm._v(\" \"),\n    _vm._m(83),\n    _c(\"p\", [\n      _vm._v(\n        \"Or we set a valid certificate thumbprint to do it in local machine.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(84),\n    _c(\"p\", [\n      _vm._v(\"We can also do testsign via setting store/company info.\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(85),\n    _vm._m(86),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"We can set a certificate file for release signing.\")]),\n    _vm._v(\" \"),\n    _vm._m(87),\n    _vm._m(88),\n    _vm._v(\" \"),\n    _vm._m(89),\n    _vm._v(\" \"),\n    _vm._m(90),\n    _c(\"p\", [\n      _vm._v(\"We can also set windows version for WDK driver program:\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(91),\n    _vm._m(92),\n    _vm._v(\" \"),\n    _vm._m(93),\n    _c(\"p\", [\n      _vm._v(\"If you want to known more information, you can see \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake/issues/173\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"#173\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(94),\n    _vm._v(\" \"),\n    _vm._m(95),\n    _vm._v(\" \"),\n    _vm._m(96),\n    _vm._v(\" \"),\n    _vm._m(97),\n    _vm._v(\" \"),\n    _vm._m(98),\n    _vm._v(\" \"),\n    _vm._m(99),\n    _vm._v(\" \"),\n    _vm._m(100),\n    _c(\"p\", { staticClass: \"tip\" }, [\n      _vm._v(\n        \"\\n    XMake will detect the current host platform automatically and build project.\\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(101),\n    _vm._v(\" \"),\n    _vm._m(102),\n    _vm._m(103),\n    _vm._v(\" \"),\n    _vm._m(104),\n    _vm._m(105),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"For example:\")]),\n    _vm._v(\" \"),\n    _vm._m(106),\n    _vm._m(107),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tip\" }, [\n      _vm._v(\n        \"\\nPlease attempt to set `--arch=` option if it had failed to check compiler.\\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(108),\n    _vm._v(\" \"),\n    _vm._m(109),\n    _vm._m(110),\n    _vm._v(\" \"),\n    _vm._m(111),\n    _vm._m(112),\n    _vm._v(\" \"),\n    _vm._m(113),\n    _vm._m(114),\n    _vm._v(\" \"),\n    _vm._m(115),\n    _vm._m(116),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"For linux platform:\")]),\n    _vm._v(\" \"),\n    _vm._m(117),\n    _c(\"p\", [_vm._v(\"Fro other cross platform:\")]),\n    _vm._v(\" \"),\n    _vm._m(118),\n    _vm._m(119),\n    _vm._v(\" \"),\n    _vm._m(120),\n    _vm._m(121),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tip\" }, [\n      _vm._v(\n        \"\\nif you want to known more options, please run: `xmake f --help`。\\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(122),\n    _vm._v(\" \"),\n    _vm._m(123),\n    _vm._v(\" \"),\n    _vm._m(124),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"As long as this toolchains meet the following directory structure:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(125),\n    _c(\"p\", [\n      _vm._v(\"Then，we can only configure the sdk directory and build it.\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(126),\n    _c(\"p\", [\n      _vm._v(\n        \"xmake will detect the prefix: arm-linux- and add the include and library search directory automatically.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(127),\n    _vm._m(128),\n    _vm._v(\" \"),\n    _vm._m(129),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"We need set it manually if the toolchains /bin directory is in other places, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(130),\n    _c(\"p\", { staticClass: \"tips\" }, [\n      _vm._v(\n        \"\\nBefore v2.2.1 version, this parameter name is `--toolchains`, exists more ambiguous, so we changed to `--bin=` to set the bin directory.\\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(131),\n    _vm._v(\" \"),\n    _vm._m(132),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"For example, under the same toolchains directory at the same time, there are two different compilers:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(133),\n    _vm._m(134),\n    _vm._v(\" \"),\n    _vm._m(135),\n    _vm._m(136),\n    _vm._v(\" \"),\n    _vm._m(137),\n    _vm._v(\" \"),\n    _vm._m(138),\n    _c(\"p\", [\n      _vm._v(\n        \"If the 'AS' environment variable exists, it will use the values specified in the current environment variables.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tips\" }, [\n      _vm._v(\n        \"\\nWe can set a unknown compiler as like-gcc/clang compiler, .e.g `xmake f --as=gcc@/home/xxx/asmips.exe` \\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(139),\n    _vm._v(\" \"),\n    _vm._m(140),\n    _vm._v(\" \"),\n    _vm._m(141),\n    _c(\"p\", [\n      _vm._v(\n        \"If the 'CC' environment variable exists, it will use the values specified in the current environment variables.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tips\" }, [\n      _vm._v(\n        \"\\nWe can set a unknown compiler as like-gcc/clang compiler, .e.g `xmake f --cc=gcc@/home/xxx/ccmips.exe` \\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(142),\n    _vm._v(\" \"),\n    _vm._m(143),\n    _vm._v(\" \"),\n    _vm._m(144),\n    _c(\"p\", [\n      _vm._v(\n        \"If the 'CXX' environment variable exists, it will use the values specified in the current environment variables.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tips\" }, [\n      _vm._v(\n        \"\\nWe can set a unknown compiler as like-gcc/clang compiler, .e.g `xmake f --cxx=g++@/home/xxx/c++mips.exe` \\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(145),\n    _vm._v(\" \"),\n    _vm._m(146),\n    _vm._v(\" \"),\n    _vm._m(147),\n    _c(\"p\", [\n      _vm._v(\n        \"If the 'LD' environment variable exists, it will use the values specified in the current environment variables.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tips\" }, [\n      _vm._v(\n        \"\\nWe can set a unknown compiler as like-gcc/clang linker, .e.g `xmake f --ld=g++@/home/xxx/c++mips.exe` \\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(148),\n    _vm._v(\" \"),\n    _vm._m(149),\n    _vm._v(\" \"),\n    _vm._m(150),\n    _c(\"p\", [\n      _vm._v(\n        \"If the 'SH' environment variable exists, it will use the values specified in the current environment variables.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tips\" }, [\n      _vm._v(\n        \"\\nWe can set a unknown compiler as like-gcc/clang linker, .e.g `xmake f --sh=g++@/home/xxx/c++mips.exe` \\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(151),\n    _vm._v(\" \"),\n    _vm._m(152),\n    _vm._v(\" \"),\n    _vm._m(153),\n    _c(\"p\", [\n      _vm._v(\n        \"If the 'AR' environment variable exists, it will use the values specified in the current environment variables.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"tips\" }, [\n      _vm._v(\n        \"\\nWe can set a unknown compiler as like-ar archiver, .e.g `xmake f --ar=ar@/home/xxx/armips.exe` \\n\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(154),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"You can save to the global configuration for simplfying operation.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"For example:\")]),\n    _vm._v(\" \"),\n    _vm._m(155),\n    _c(\"p\", [_vm._v(\"Now, we config and build project for android again.\")]),\n    _vm._v(\" \"),\n    _vm._m(156),\n    _vm._m(157),\n    _vm._v(\" \"),\n    _vm._m(158),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"We can clean all cached configuration and re-configure projecct.\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(159),\n    _c(\"p\", [_vm._v(\"or\")]),\n    _vm._v(\" \"),\n    _vm._m(160),\n    _vm._m(161),\n    _vm._v(\" \"),\n    _vm._m(162),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"By including a dependency package directory and a binary package file in the project, it is convenient to integrate some third-party dependency libraries. This method is relatively simple and straightforward, but the disadvantages are also obvious and inconvenient to manage.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Take the tbox project as an example. The dependency package is as follows:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(163),\n    _c(\"p\", [\n      _vm._v(\n        \"If you want the current project to recognize loading these packages, you first need to specify the package directory path, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(164),\n    _c(\"p\", [\n      _vm._v(\n        \"Once specified, you can add integration package dependencies in the target scope via the \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://xmake.io/#/zh/manual?id=targetadd_packages\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"add_packages\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" interface, for example:\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(165),\n    _c(\"p\", [\n      _vm._v(\n        \"So how to generate a *.pkg package, if it is based on xmake project, the generation method is very simple, only need:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(166),\n    _c(\"p\", [\n      _vm._v(\n        \"You can generate a tbox.pkg cross-platform package in the build directory for use by third-party projects. I can also directly set the output directory and compile and generate it into the other project, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(167),\n    _c(\"p\", [\n      _vm._v(\"In this way, the test project can pass \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://xmake.io/#/zh/manual?id=targetadd_packages\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"add_packages\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\n        \" and [add_packagedirs](https://xmake.io/#/zh/manual?id= add_packagedirs) to configure and use the tbox.pkg package.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"For a detailed description of the built-in package, you can also refer to the following related article, which is described in detail: [Dependency package addition and automatic detection mechanism] (http://tboox.org/cn/2016/08/06/add-package -and-autocheck/)\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(168),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"If you feel that the above built-in package management method is very inconvenient, you can use the extension interface [lib.detect.find_package] provided by xmake (https://xmake.io/#/zh/manual?id=detect-find_package) to find the system. Existing dependencies.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Currently this interface supports the following package management support:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(169),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"And through the system and third-party package management tools for the installation of the dependency package, and then integrated with xmake, for example, we look for an openssl package:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(170),\n    _c(\"p\", [_vm._v(\"The returned results are as follows:\")]),\n    _vm._v(\" \"),\n    _vm._m(171),\n    _c(\"p\", [\n      _vm._v(\n        \"If the search is successful, return a table containing all the package information, if it fails, return nil\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(172),\n    _vm._v(\" \"),\n    _vm._m(173),\n    _vm._m(174),\n    _vm._m(175),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"For a more complete description of the usage, please refer to the \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://xmake.io/#/en/manual?id=detect-find_package\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"lib.detect.find_package\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" interface documentation.\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(176),\n    _vm._v(\" \"),\n    _vm._m(177),\n    _vm._v(\" \"),\n    _vm._m(178),\n    _vm._v(\" \"),\n    _vm._m(179),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Of course, we can also manually specify the root path of vcpkg to support:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(180),\n    _c(\"p\", [\n      _vm._v(\n        \"Or we can set it to the global configuration to avoid repeating the settings each time we switch configurations:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(181),\n    _vm._m(182),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"This has been initially supported after the 2.2.2 version, the usage is much simpler, just set the corresponding dependency package, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(183),\n    _vm._m(184),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Then directly compile:\")]),\n    _vm._v(\" \"),\n    _vm._m(185),\n    _c(\"p\", [\n      _vm._v(\n        \"xmake will remotely pull the relevant source package, then automatically compile and install, finally compile the project, and link the dependency package. The specific effect is shown in the following figure:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"img\", {\n      attrs: { src: \"/assets/img/index/package_manage.png\", width: \"80%\" }\n    }),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"For more information and progress on package dependency management see the related issues: [Remote package management] (https://github.com/tboox/xmake/issues/69)\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(186),\n    _vm._v(\" \"),\n    _vm._m(187),\n    _vm._v(\" \"),\n    _vm._m(188),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Here we briefly introduce the processing mechanism of the entire dependency package:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(189),\n    _vm._v(\" \"),\n    _vm._m(190),\n    _vm._v(\" \"),\n    _vm._m(191),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        'Xmake\\'s dependency package management fully supports semantic version selection, for example: \"~1.6.1\". For a detailed description of the semantic version, see: [http://semver.org/] (http://semver.org/)'\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Some semantic versions are written:\")]),\n    _vm._v(\" \"),\n    _vm._m(192),\n    _c(\"p\", [\n      _vm._v(\"The semantic version parser currently used by xmake is the \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/uael/sv\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"sv\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" library contributed by \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/uael\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"uael\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\n        \", which also has a description of the version. For detailed instructions, please refer to the following: [Version Description] (https://github.com/uael/sv#versions)\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Of course, if we have no special requirements for the current version of the dependency package, then we can write directly:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(193),\n    _c(\"p\", [\n      _vm._v(\n        \"This will use the latest version of the package known, or the source code compiled by the master branch. If the current package has a git repo address, we can also specify a specific branch version:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(194),\n    _vm._m(195),\n    _vm._v(\" \"),\n    _vm._m(196),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"If the specified dependency package is not supported by the current platform, or if the compilation and installation fails, then xmake will compile the error, which is reasonable for some projects that must rely on certain packages to work.\\nHowever, if some packages are optional dependencies, they can be set to optional packages even if they are not compiled properly.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(197),\n    _vm._m(198),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"With the default settings, xmake will first check to see if the system library exists (if no version is required). If the user does not want to use the system library and the library provided by the third-party package management, then you can set:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(199),\n    _vm._m(200),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"If we want to debug the dependencies at the same time, we can set them to use the debug version of the package (provided that this package supports debug compilation):\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(201),\n    _c(\"p\", [\n      _vm._v(\n        \"If the current package does not support debug compilation, you can submit the modified compilation rules in the repository to support the debug, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(202),\n    _vm._m(203),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Some packages have various compile options at compile time, and we can pass them in. Of course, the package itself supports:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(204),\n    _vm._m(205),\n    _vm._v(\" \"),\n    _vm._m(206),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"If the required package is not in the official repository \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake-repo\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"xmake-repo\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\n        \", we can submit the contribution code to the repository for support.\\nBut if some packages are only for personal or private projects, we can create a private repository repo. The repository organization structure can be found at: \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake-repo\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"xmake-repo\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(207),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"We can add the repository with the following command:\")]),\n    _vm._v(\" \"),\n    _vm._m(208),\n    _c(\"p\", [_vm._v(\"Or we write directly in xmake.lua:\")]),\n    _vm._v(\" \"),\n    _vm._m(209),\n    _c(\"p\", [\n      _vm._v(\n        \"If we just want to add one or two private packages, this time to build a git repo is too big, we can directly put the package repository into the project, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(210),\n    _c(\"p\", [\n      _vm._v(\n        \"The above myrepo directory is your own private package repository, built into your own project, and then add this repository location in xmake.lua:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(211),\n    _c(\"p\", [\n      _vm._v(\n        \"This can be referred to [benchbox] (https://github.com/tboox/benchbox) project, which has a built-in private repository.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"We can even build a package without directly building a package description into the project xmake.lua, which is useful for relying on one or two packages, for example:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(212),\n    _vm._m(213),\n    _vm._v(\" \"),\n    _vm._m(214),\n    _vm._v(\" \"),\n    _vm._m(215),\n    _vm._v(\" \"),\n    _vm._m(216),\n    _c(\"p\", [_vm._v(\"Install the specified version package:\")]),\n    _vm._v(\" \"),\n    _vm._m(217),\n    _c(\"p\", [\n      _vm._v(\n        \"Force a re-download of the installation and display detailed installation information:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(218),\n    _c(\"p\", [_vm._v(\"Pass additional setup information:\")]),\n    _vm._v(\" \"),\n    _vm._m(219),\n    _vm._m(220),\n    _vm._v(\" \"),\n    _vm._m(221),\n    _vm._v(\" \"),\n    _vm._m(222),\n    _c(\"p\", [\n      _vm._v(\"This will completely uninstall the removal package file.\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(223),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Only unlink specifies the package, it is not detected by the current project, but the package still exists locally. If it is reinstalled, it will be completed very quickly.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(224),\n    _vm._m(225),\n    _vm._v(\" \"),\n    _vm._m(226),\n    _vm._m(227),\n    _vm._v(\" \"),\n    _vm._m(228),\n    _c(\"p\", [\n      _vm._v(\"This is to support fuzzy search and lua pattern matching search:\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(229),\n    _c(\"p\", [_vm._v(\"Will also search for pcre, pcre2 and other packages.\")]),\n    _vm._v(\" \"),\n    _vm._m(230),\n    _vm._v(\" \"),\n    _vm._m(231),\n    _vm._m(232),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"As mentioned above, adding a private repository is available (supporting local path addition):\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(233),\n    _c(\"p\", [\n      _vm._v(\"We can also remove a repository that has already been installed:\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(234),\n    _c(\"p\", [_vm._v(\"Or view all the added warehouses:\")]),\n    _vm._v(\" \"),\n    _vm._m(235),\n    _c(\"p\", [\n      _vm._v(\n        \"If the remote repository has updates, you can manually perform a warehouse update to get more and the latest packages:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(236),\n    _vm._m(237),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"If you need a package that is not supported by the current official repository, you can commit it to the official repository after local tuning: \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/tboox/xmake-repo\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"xmake-repo\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"For detailed contribution descriptions, see: \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://github.com/tboox/xmake-repo/blob/master/CONTRIBUTING.md\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"CONTRIBUTING.md\"), _c(\"OutboundLink\")],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"getting-started\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#getting-started\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Getting Started\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"installation\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#installation\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Installation\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"master\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#master\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Master\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"via-curl\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#via-curl\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" via curl\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"bash\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\n            \"curl -fsSL https://raw.githubusercontent.com/tboox/xmake/master/scripts/get.sh\"\n          ),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"via-wget\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#via-wget\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" via wget\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"bash\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\n            \"wget https://raw.githubusercontent.com/tboox/xmake/master/scripts/get.sh -O -\"\n          ),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"via-powershell\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#via-powershell\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" via powershell\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"Invoke-Expression \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"Invoke-Webrequest \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\n              \"'https://raw.githubusercontent.com/tboox/xmake/master/scripts/get.ps1'\"\n            )\n          ]),\n          _vm._v(\" -UseBasicParsing\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\".Content\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"windows\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#windows\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Windows\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"macos\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#macos\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" MacOS\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ brew \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"install\")\n          ]),\n          _vm._v(\" xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"linux\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#linux\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Linux\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ yaourt xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" add-apt-repository ppa:tboox/xmake\\n$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" apt update\\n$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" apt \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"install\")\n          ]),\n          _vm._v(\" xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"deb http://ppa.launchpad.net/tboox/xmake/ubuntu yakkety main \\ndeb-src http://ppa.launchpad.net/tboox/xmake/ubuntu yakkety main \\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" apt update\\n$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" apt \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"install\")\n          ]),\n          _vm._v(\" xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _vm._v(\"Run \"),\n      _c(\"code\", [_vm._v(\"dpkg -i xmake-xxxx.deb\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"compilation\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#compilation\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Compilation\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" clone https://github.com/tboox/xmake.git\\n$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cd\")]),\n          _vm._v(\" ./xmake\\n$ ./scripts/get.sh __local__\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ ./scripts/get.sh __local__ __install_only__\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ ./scripts/get.sh __uninstall__\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"make\")]),\n          _vm._v(\" build\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"make\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"install\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"make\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"install\")\n          ]),\n          _vm._v(\" prefix\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/local\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"sudo\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"make\")]),\n          _vm._v(\" uninstall\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"quick-start\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#quick-start\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Quick Start\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"create-project\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#create-project\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Create Project\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake create -l c -P ./hello\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [_vm._v(\"hello\\n├── src\\n│   └── main.c\\n└── xmake.lua\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"It is a simple console program only for printing \"),\n      _c(\"code\", [_vm._v(\"hello xmake!\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"The content of \"),\n      _c(\"code\", [_vm._v(\"xmake.lua\")]),\n      _vm._v(\" is very simple:\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"hello\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_vm._v(\"c/c++\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"objc/c++\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"asm\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"swift\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"dlang\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"golang\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"rust\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"build-project\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#build-project\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Build Project\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"run-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#run-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Run Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake run hello\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"debug-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#debug-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Debug Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake run -d hello \\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"lldb\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [\n            _vm._v(\"$target\")\n          ]),\n          _vm._v(\" create \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"build/hello\"')\n          ]),\n          _vm._v(\"\\nCurrent executable \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"set\")]),\n          _vm._v(\" to \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'build/hello'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"x86_64\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\".\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"lldb\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$b\")]),\n          _vm._v(\" main\\nBreakpoint 1: where \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" hello\"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"`\")]),\n            _vm._v(\"main, address \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" 0x0000000100000f50\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"lldb\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"$r\\nProcess 7509 launched: \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'/private/tmp/hello/build/hello'\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"x86_64\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\nProcess 7509 stopped\\n* thread #1: tid \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" 0x435a2, 0x0000000100000f50 hello\"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"`\")])\n          ]),\n          _vm._v(\"main, queue \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'com.apple.main-thread'\")\n          ]),\n          _vm._v(\", stop reason \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" breakpoint 1.1\\n    frame \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"#0: 0x0000000100000f50 hello`main\")\n          ]),\n          _vm._v(\"\\nhello`main:\\n-\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\"  0x100000f50 \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _vm._v(\"+0\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\":  pushq  %rbp\\n    0x100000f51 \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _vm._v(\"+1\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\":  movq   %rsp, %rbp\\n    0x100000f54 \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _vm._v(\"+4\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\":  leaq   0x2b\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"%rip\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\", %rdi          \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"hello world!\"')\n          ]),\n          _vm._v(\"\\n    0x100000f5b \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n          _vm._v(\"+11\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\": callq  0x100000f64               \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\" symbol stub for: puts\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"lldb\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"$\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"project-examples\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#project-examples\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Project Examples\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"executable-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#executable-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Executable Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"static-library-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#static-library-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Static Library Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"library\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"static\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/library/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_deps\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"library\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"We use \"),\n      _c(\"code\", [_vm._v(\"add_deps\")]),\n      _vm._v(\" to link a static library to test target.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"share-library-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#share-library-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Share Library Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"library\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"shared\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/library/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_deps\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"library\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"We use \"),\n      _c(\"code\", [_vm._v(\"add_deps\")]),\n      _vm._v(\" to link a share library to test target.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"qt-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#qt-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Qt Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake create -l c++ -t console_qt \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"test\")]),\n          _vm._v(\"\\n$ xmake create -l c++ -t static_qt \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"test\")]),\n          _vm._v(\"\\n$ xmake create -l c++ -t shared_qt \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"test\")]),\n          _vm._v(\"\\n$ xmake create -l c++ -t quickapp_qt \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"test\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f --qt\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"~/Qt/Qt5.9.1\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p mingw --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"C:\\\\Qt\\\\Qt5.10.1\\\\Tools\\\\mingw530_32 \\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"static-library\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#static-library\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Static Library\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt_static_library\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt.static\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.cpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_frameworks\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"QtNetwork\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"QtGui\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"shared-library\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#shared-library\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Shared Library\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt_shared_library\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt.shared\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.cpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_frameworks\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"QtNetwork\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"QtGui\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"console-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#console-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Console Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt_console\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt.console\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.cpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"quick-application\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#quick-application\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Quick Application\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt_quickapp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt.application\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.cpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/qml.qrc\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_frameworks\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"QtQuick\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"widgets-application\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#widgets-application\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Widgets Application\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt_widgetapp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"qt.application\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.cpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/mainwindow.ui\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/mainwindow.h\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"-- add files with Q_OBJECT meta (only for qt.moc)\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_frameworks\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"QtWidgets\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"cuda-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#cuda-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Cuda Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake create -P \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"test\")]),\n          _vm._v(\" -l cuda\\n$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cd\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"test\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"cuda_console\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.cu\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"-- generate SASS code for each SM architecture\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"for\")]),\n          _vm._v(\" _\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" sm \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"in\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"ipairs\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"30\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"35\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"37\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"50\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"52\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"60\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"61\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"70\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"do\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_cuflags\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-gencode arch=compute_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\",code=sm_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_ldflags\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-gencode arch=compute_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\",code=sm_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"end\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"-- generate PTX code from the highest SM architecture to guarantee forward-compatibility\"\n            )\n          ]),\n          _vm._v(\"\\n    sm \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"70\"')]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_cuflags\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-gencode arch=compute_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\",code=compute_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_ldflags\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-gencode arch=compute_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\",code=compute_\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"..\")]),\n          _vm._v(\" sm\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f --cuda\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/local/cuda-9.1/ \\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"wdk-driver-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#wdk-driver-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" WDK Driver Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f --wdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"G:\\\\Program Files\\\\Windows Kits\\\\10\"')\n          ]),\n          _vm._v(\" -c\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"umdf-driver-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#umdf-driver-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" UMDF Driver Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"echo\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.umdf\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"driver/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"driver/*.inx\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_includedirs\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"exe\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"app\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.umdf\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"exe/*.cpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"kmdf-driver-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#kmdf-driver-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" KMDF Driver Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"nonpnp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.kmdf\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.tracewpp.flags\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-func:TraceEvents(LEVEL,FLAGS,MSG,...)\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-func:Hexdump((LEVEL,FLAGS,MSG,...))\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"driver/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"rule \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.tracewpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"driver/*.rc\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"app\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.kmdf\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"exe/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"exe/*.inf\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"wdm-driver-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#wdm-driver-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" WDM Driver Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"kcs\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.wdm\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.man.flags\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-prefix Kcs\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.man.resource\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"kcsCounters.rc\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.man.header\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"kcsCounters.h\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.man.counter_header\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"kcsCounters_counters.h\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.c\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.rc\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.man\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"msdsm\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.wdm\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.tracewpp.flags\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"-func:TracePrint((LEVEL,FLAGS,MSG,...))\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.c\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"rule \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.tracewpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.rc\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.inf\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"*.mof|msdsm.mof\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"msdsm.mof\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"values \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"wdk_mof_header \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"msdsmwmi.h\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"package-driver\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#package-driver\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Package Driver\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"p\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"p\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" -o outputdir\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"  - drivers\\n    - sampledsm\\n       - debug/x86/sampledsm.cab\\n       - release/x64/sampledsm.cab\\n       - debug/x86/sampledsm.cab\\n       - release/x64/sampledsm.cab\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"driver-signing\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#driver-signing\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Driver Signing\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"The driver signing is disabled when we compile driver in default case,\\nbut we can add \"\n      ),\n      _c(\"code\", [_vm._v('set_values(\"wdk.sign.mode\")')]),\n      _vm._v(\" to enable test/release sign.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"testsign\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#testsign\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" TestSign\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"We can use test certificate of xmake to do testsign, but please run \"\n      ),\n      _c(\"code\", [_vm._v(\"$xmake l utils.wdk.testcert\")]),\n      _vm._v(\n        \" install as admin to install a test certificate first (only once)!\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"msdsm\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.wdm\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.mode\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"msdsm\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.wdm\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.mode\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.thumbprint\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"032122545DCAA6167B1ADBE5F7FDF07AE2234AAA\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"msdsm\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.wdm\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.mode\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.store\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"PrivateCertStore\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.company\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"tboox.org(test)\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"releasesign\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#releasesign\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" ReleaseSign\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"msdsm\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.driver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.wdm\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.mode\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"release\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.company\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"xxxx\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.sign.certfile\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" path\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"join\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"projectdir\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"xxxx.cer\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"support-low-version-system\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#support-low-version-system\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Support Low-version System\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"We can set \"),\n      _c(\"code\", [_vm._v(\"wdk.env.winver\")]),\n      _vm._v(\n        \" to generate a driver package that is compatible with a low version system.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"win10\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"win10_rs3\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"win81\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"win8\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"win7\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"win7_sp1\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"win7_sp2\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_values\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"wdk.env.winver\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"win7_sp3\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f --wdk_winver\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"win10_rs3\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"win8\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"win7\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"win7_sp1\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"winsdk-application-program\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#winsdk-application-program\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" WinSDK Application Program\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"usbview\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_rules\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"win.sdk.application\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.c\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.rc\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"xmlhelper.cpp\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"rule \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"win.sdk.dotnet\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"configuration\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#configuration\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Configuration\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Set compilation configuration before building project with command \"\n      ),\n      _c(\"code\", [_vm._v(\"xmake f|config\")]),\n      _vm._v(\".\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"And if you want to known more options, please run: \"),\n      _c(\"code\", [_vm._v(\"xmake f --help\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", { staticClass: \"tip\" }, [\n      _vm._v(\"\\n    You can use short or long command option, for exmaple: \"),\n      _c(\"br\"),\n      _vm._v(\"\\n    `xmake f` or `xmake config`.\"),\n      _c(\"br\"),\n      _vm._v(\"\\n    `xmake f -p linux` or `xmake config --plat=linux`.\\n\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"target-platforms\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#target-platforms\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Target Platforms\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"current-host\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#current-host\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Current Host\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"linux-2\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#linux-2\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Linux\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-a i386\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"x86_64\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"android\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#android\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Android\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p android --ndk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"~/files/android-ndk-r10e/ \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-a armv5te\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"armv6\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"armv7-a\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"armv8-a\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"arm64-v8a\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"If you want to set the other android toolchains, you can use \"),\n      _c(\"a\", { attrs: { href: \"#-bin\" } }, [_vm._v(\"--bin\")]),\n      _vm._v(\" option.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p android --ndk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"~/files/android-ndk-r10e/ -a arm64-v8a --bin\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\n            \"~/files/android-ndk-r10e/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"The \"),\n      _c(\"a\", { attrs: { href: \"#-bin\" } }, [_vm._v(\"--bin\")]),\n      _vm._v(\" option is used to set \"),\n      _c(\"code\", [_vm._v(\"bin\")]),\n      _vm._v(\" directory of toolchains.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"iphoneos\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#iphoneos\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" iPhoneOS\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p iphoneos \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-a armv7\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"armv7s\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"arm64\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"i386\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"x86_64\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"windows-2\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#windows-2\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Windows\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p windows \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-a x86\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"x64\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"mingw\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#mingw\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Mingw\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p mingw --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/local/i386-mingw32-4.3.0/ \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-a i386\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"x86_64\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"apple-watchos\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#apple-watchos\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Apple WatchOS\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p watchos \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"-a i386\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"armv7k\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"cross-compilation\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#cross-compilation\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Cross Compilation\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/local/arm-linux-gcc/ \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"--bin\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/sdk/bin\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"--cross\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"arm-linux-\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p cross --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/local/arm-xxx-gcc/ \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"--bin\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/sdk/bin\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"--cross\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"arm-linux-\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"For custem cross platform (\"),\n      _c(\"code\", [_vm._v('is_plat(\"myplat\")')]),\n      _vm._v(\"):\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p myplat --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/local/arm-xxx-gcc/ \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"--bin\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/sdk/bin\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"--cross\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"arm-linux-\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"Configuration Option\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"Description\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-sdk\" } }, [_vm._v(\"--sdk\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Set the sdk root directory of toolchains\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-bin\" } }, [_vm._v(\"--bin\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set the \"),\n            _c(\"code\", [_vm._v(\"bin\")]),\n            _vm._v(\" directory of toolchains\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cross\" } }, [_vm._v(\"--cross\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Set the prefix of compilation tools\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-as\" } }, [_vm._v(\"--as\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"asm\")]),\n            _vm._v(\" assembler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-cc\" } }, [_vm._v(\"--cc\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-cxx\" } }, [_vm._v(\"--cxx\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c++\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-mm\" } }, [_vm._v(\"--mm\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"objc\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-mxx\" } }, [_vm._v(\"--mxx\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"objc++\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-sc\" } }, [_vm._v(\"--sc\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"swift\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-gc\" } }, [_vm._v(\"--gc\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"golang\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-dc\" } }, [_vm._v(\"--dc\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"dlang\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-rc\" } }, [_vm._v(\"--rc\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"rust\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-cu\" } }, [_vm._v(\"--cu\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"cuda\")]),\n            _vm._v(\" compiler\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-ld\" } }, [_vm._v(\"--ld\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c/c++/objc/asm\")]),\n            _vm._v(\" linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-sh\" } }, [_vm._v(\"--sh\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c/c++/objc/asm\")]),\n            _vm._v(\" shared library linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"a\", { attrs: { href: \"#-ar\" } }, [_vm._v(\"--ar\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c/c++/objc/asm\")]),\n            _vm._v(\" static library archiver\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-sc-ld\" } }, [_vm._v(\"--sc-ld\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"swift\")]),\n            _vm._v(\" linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-sc-sh\" } }, [_vm._v(\"--sc-sh\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"swift\")]),\n            _vm._v(\" shared library linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-gc-ld\" } }, [_vm._v(\"--gc-ld\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"golang\")]),\n            _vm._v(\" linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-gc-ar\" } }, [_vm._v(\"--gc-ar\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"golang\")]),\n            _vm._v(\" static library archiver\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-dc-ld\" } }, [_vm._v(\"--dc-ld\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"dlang\")]),\n            _vm._v(\" linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-dc-sh\" } }, [_vm._v(\"--dc-sh\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"dlang\")]),\n            _vm._v(\" shared library linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-dc-ar\" } }, [_vm._v(\"--dc-ar\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"dlang\")]),\n            _vm._v(\" static library archiver\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-rc-ld\" } }, [_vm._v(\"--rc-ld\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"rust\")]),\n            _vm._v(\" linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-rc-sh\" } }, [_vm._v(\"--rc-sh\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"rust\")]),\n            _vm._v(\" shared library linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-rc-ar\" } }, [_vm._v(\"--rc-ar\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"rust\")]),\n            _vm._v(\" static library archiver\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cu-ld\" } }, [_vm._v(\"--cu-ld\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"cuda\")]),\n            _vm._v(\" linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cu-sh\" } }, [_vm._v(\"--cu-sh\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"cuda\")]),\n            _vm._v(\" shared library linker\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cu-ar\" } }, [_vm._v(\"--cu-ar\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"cuda\")]),\n            _vm._v(\" static library archiver\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-asflags\" } }, [_vm._v(\"--asflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"asm\")]),\n            _vm._v(\" assembler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cflags\" } }, [_vm._v(\"--cflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cxflags\" } }, [_vm._v(\"--cxflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c/c++\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cxxflags\" } }, [_vm._v(\"--cxxflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"c++\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-mflags\" } }, [_vm._v(\"--mflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"objc\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-mxflags\" } }, [_vm._v(\"--mxflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"objc/c++\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-mxxflags\" } }, [_vm._v(\"--mxxflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"objc++\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-scflags\" } }, [_vm._v(\"--scflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"swift\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-gcflags\" } }, [_vm._v(\"--gcflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"golang\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-dcflags\" } }, [_vm._v(\"--dcflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"dlang\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-rcflags\" } }, [_vm._v(\"--rcflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"rust\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-cuflags\" } }, [_vm._v(\"--cuflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"Set \"),\n            _c(\"code\", [_vm._v(\"cuda\")]),\n            _vm._v(\" compiler option\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-ldflags\" } }, [_vm._v(\"--ldflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Set  linker option\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-shflags\" } }, [_vm._v(\"--shflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Set  shared library linker option\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"a\", { attrs: { href: \"#-arflags\" } }, [_vm._v(\"--arflags\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Set  static library archiver option\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"sdk\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#sdk\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --sdk\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_vm._v(\"Set the sdk root directory of toolchains\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"xmake provides a convenient and flexible cross-compiling support.\\nIn most cases, we need not to configure complex toolchains prefix, for example: \"\n      ),\n      _c(\"code\", [_vm._v(\"arm-linux-\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"/home/toolchains_sdkdir\\n   - bin\\n       - arm-linux-gcc\\n       - arm-linux-ld\\n       - ...\\n   - lib\\n       - libxxx.a\\n   - include\\n       - xxx.h\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/home/toolchains_sdkdir\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"-I/home/toolchains_sdkdir/include -L/home/toolchains_sdkdir/lib\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"bin\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#bin\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --bin\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"Set the \"),\n        _c(\"code\", [_vm._v(\"bin\")]),\n        _vm._v(\" directory of toolchains\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/home/toolchains_sdkdir --bin\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/opt/bin\\n$ xmake\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"cross\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#cross\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --cross\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [_c(\"li\", [_vm._v(\"Set the prefix of compilation tools\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\"/opt/bin\\n - armv7-linux-gcc\\n - aarch64-linux-gcc\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"If we want to use the \"),\n      _c(\"code\", [_vm._v(\"armv7-linux-gcc\")]),\n      _vm._v(\" compiler, we can run the following command:\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/usr/toolsdk --bin\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/opt/bin --cross\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"armv7-linux-\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"as\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#as\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --as\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"Set \"),\n        _c(\"code\", [_vm._v(\"asm\")]),\n        _vm._v(\" assembler\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/user/toolsdk --as\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"armv7-linux-as\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"cc\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#cc\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --cc\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [_c(\"li\", [_vm._v(\"Set c compiler\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/user/toolsdk --cc\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"armv7-linux-clang\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"cxx\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#cxx\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --cxx\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"Set \"),\n        _c(\"code\", [_vm._v(\"c++\")]),\n        _vm._v(\" compiler\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/user/toolsdk --cxx\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"armv7-linux-clang++\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"ld\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#ld\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --ld\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"Set \"),\n        _c(\"code\", [_vm._v(\"c/c++/objc/asm\")]),\n        _vm._v(\" linker\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/user/toolsdk --ld\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"armv7-linux-clang++\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"sh\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#sh\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --sh\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"Set \"),\n        _c(\"code\", [_vm._v(\"c/c++/objc/asm\")]),\n        _vm._v(\" shared library linker\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/user/toolsdk --sh\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"armv7-linux-clang++\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"ar\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#ar\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" --ar\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"Set \"),\n        _c(\"code\", [_vm._v(\"c/c++/objc/asm\")]),\n        _vm._v(\" static library archiver\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f -p linux --sdk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"/user/toolsdk --ar\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"armv7-linux-ar\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"global-configuration\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#global-configuration\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Global Configuration\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake g --ndk\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"~/files/android-ndk-r10e/\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake f -p android\\n$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", { staticClass: \"tip\" }, [\n      _vm._v(\n        \"\\n    You can use short or long command option, for exmaple: `xmake g` or `xmake global`.\"\n      ),\n      _c(\"br\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"clean-configuration\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#clean-configuration\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Clean Configuration\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake f -c\\n$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake f -p iphoneos -c\\n$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"dependency-package-management\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#dependency-package-management\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Dependency Package Management\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"local-package-mode\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#local-package-mode\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Local Package Mode\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"- base.pkg\\n- zlib.pkg\\n- polarssl.pkg\\n- openssl.pkg\\n- mysql.pkg\\n- pcre.pkg\\n- ...\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_packagedirs\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"packages\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"tbox\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_packages\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"zlib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"polarssl\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"pcre\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"mysql\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cd\")]),\n          _vm._v(\" tbox\\n$ xmake package\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cd\")]),\n          _vm._v(\" tbox\\n$ xmake package -o \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"..\")]),\n          _vm._v(\"/test/packages\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"system-search-mode\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#system-search-mode\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" System Search Mode\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_vm._v(\"vcpkg\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"homebrew\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"pkg-config\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"import\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"lib.detect.find_package\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"local\")]),\n          _vm._v(\" package \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"find_package\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"openssl\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"links \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"ssl\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"crypto\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"z\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" linkdirs \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"/usr/local/lib\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" includedirs \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"/usr/local/include\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"The return result here can be directly passed as the parameter of \"\n      ),\n      _c(\"code\", [_vm._v(\"target:add\")]),\n      _vm._v(\", \"),\n      _c(\"code\", [_vm._v(\"option:add\")]),\n      _vm._v(\", which is used to dynamically increase the configuration of \"),\n      _c(\"code\", [_vm._v(\"target/option\")]),\n      _vm._v(\":\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"option\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"zlib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_showmenu\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"true\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"before_check\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"option\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"import\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"lib.detect.find_package\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        option\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"add\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"find_package\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"zlib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"end\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"on_load\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"target\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"import\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"lib.detect.find_package\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        target\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"add\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"find_package\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"zlib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"end\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"If third-party tools such as \"),\n      _c(\"code\", [_vm._v(\"homebrew\")]),\n      _vm._v(\", \"),\n      _c(\"code\", [_vm._v(\"pkg-config\")]),\n      _vm._v(\n        \" are installed on the system, then this interface will try to use them to improve the search results.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"homebrew-integration-support\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#homebrew-integration-support\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Homebrew Integration Support\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Since homebrew is generally installed directly into the system, users do not need to do any integration work, \"\n      ),\n      _c(\"code\", [_vm._v(\"lib.detect.find_package\")]),\n      _vm._v(\" has been natively seamlessly supported.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"vcpkg-integration-support\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#vcpkg-integration-support\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Vcpkg Integration Support\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Currently xmake v2.2.2 version already supports vcpkg, users only need to install vcpkg, execute \"\n      ),\n      _c(\"code\", [_vm._v(\"$ vcpkg integrate install\")]),\n      _vm._v(\n        \", xmake will automatically detect the root path of vcpkg from the system, and then automatically adapt the bread.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake f --vcpkg\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"f:\\\\vcpkg\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake g --vcpkg\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\"f:\\\\vcpkg\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"remote-dependency-mode\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#remote-dependency-mode\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Remote dependency mode\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"tbox 1.6.*\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libpng ~1.16\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"zlib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_packages\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"tbox\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libpng\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"zlib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"The above \"),\n      _c(\"code\", [_vm._v(\"add_requires\")]),\n      _vm._v(\n        \" is used to describe the dependencies required by the current project, and \"\n      ),\n      _c(\"code\", [_vm._v(\"add_packages\")]),\n      _vm._v(\n        \" is used to apply dependencies to the test target. Only settings will automatically add links, linkdirs, includedirs, etc.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"currently-supported-features\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#currently-supported-features\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Currently Supported Features\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\n          'Semantic version support, for example: \">= 1.1.0 < 1.2\", \"~1.6\", \"1.2.x\", \"1.*\"'\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Provide multi-warehouse management support such as official package warehouse, self-built private warehouse, project built-in warehouse, etc.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Cross-platform package compilation integration support (packages of different platforms and different architectures can be installed at the same time, fast switching use)\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"Debug dependency package support, source code debugging\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h5\",\n      { attrs: { id: \"dependency-package-processing-mechanism\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#dependency-package-processing-mechanism\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Dependency Package Processing Mechanism\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { attrs: { align: \"center\" } }, [\n      _c(\"img\", {\n        attrs: { src: \"/assets/img/index/package_arch.png\", width: \"80%\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _vm._v(\n          \"Priority check for the current system directory, whether there is a specified package under the third-party package management, if there is a matching package, then you do not need to download and install (of course you can also set the system package)\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Retrieve the package matching the corresponding version, then download, compile, and install (Note: installed in a specific xmake directory, will not interfere with the system library environment)\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Compile the project, and finally automatically link the enabled dependencies\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"semantic-version-settings\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#semantic-version-settings\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Semantic Version Settings\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"tbox 1.6.*\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"pcre 1.3.x\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libpng ^1.18\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libpng ~1.16\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"zlib 1.1.2 || >=1.2.11 <1.3.0\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"tbox\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libpng\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"zlib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"tbox master\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"tbox dev\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"extra-package-information-settings\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#extra-package-information-settings\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Extra Package Information Settings\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"optional-package-settings\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#optional-package-settings\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Optional Package Settings\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"tbox\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"optional \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"true\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"disable-system-library\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#disable-system-library\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Disable System Library\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"tbox\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"system \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"false\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h6\",\n      { attrs: { id: \"using-the-debug-version-of-the-package\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#using-the-debug-version-of-the-package\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Using the debug version of the package\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"tbox\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"debug \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"true\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"package\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"openssl\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"on_install\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"linux\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"macosx\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"vrun\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"./config %s --prefix=\\\\\"%s\\\\\"\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"debug\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"and\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"--debug\"')\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"or\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"installdir\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"vrun\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"make -j4\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"vrun\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"make install\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"end\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h6\",\n      {\n        attrs: {\n          id: \"passing-additional-compilation-information-to-the-package\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#passing-additional-compilation-information-to-the-package\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Passing additional compilation information to the package\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"tbox\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"config \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"small\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"true\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Pass \"),\n      _c(\"code\", [_vm._v(\"--small=true\")]),\n      _vm._v(\n        \" to the tbox package so that compiling the installed tbox package is enabled.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h5\",\n      { attrs: { id: \"using-self-built-private-package-warehouse\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#using-self-built-private-package-warehouse\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Using self-built private package warehouse\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"For example, now we have a private repository repo:\"),\n      _c(\"code\", [_vm._v(\"git@github.com:myrepo/xmake-repo.git\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ xmake repo --add myrepo git@github.com:myrepo/xmake-repo.git\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_repositories\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"my-repo git@github.com:myrepo/xmake-repo.git\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"projectdir\\n  - myrepo\\n    - packages\\n      - t/tbox/xmake.lua\\n      - z/zlib/xmake.lua\\n  - src\\n    - main.c\\n  - xmake.lua\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_repositories\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"my-repo myrepo\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-lua extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-lua\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"package\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libjpeg\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_urls\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"http://www.ijg.org/files/jpegsrc.$(version).tar.gz\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_versions\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"v9c\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\n              '\"650250979303a649e21f87b5ccd02672af1ea6954b911342ea491f351ceb7122\"'\n            )\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"on_install\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"windows\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"mv\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"jconfig.vc\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"jconfig.h\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"vrun\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"nmake -f makefile.vc\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cp\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"*.h\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"installdir\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"include\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        os\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cp\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libjpeg.lib\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"installdir\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"lib\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"end\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"on_install\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"macosx\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"linux\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"import\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"package.tools.autoconf\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"install\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"package\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"end\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"package_end\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_requires\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libjpeg\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"target\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"test\"')]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"set_kind\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"binary\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_files\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"src/*.c\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"add_packages\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"libjpeg\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"package-management-command-use\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#package-management-command-use\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Package Management Command Use\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"The package management command \"),\n      _c(\"code\", [_vm._v(\"$ xmake require\")]),\n      _vm._v(\n        \" can be used to manually display the download, install, uninstall, retrieve, and view package information.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"install-the-specified-package\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#install-the-specified-package\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Install the specified package\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake require tbox\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake require tbox \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"~1.6\"')]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake require -f -v tbox \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v('\"1.5.x\"')]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ xmake require --extra\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"debug=true,config={small=true}\"')\n          ]),\n          _vm._v(\" tbox\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Install the debug package and pass the compilation configuration information of \"\n      ),\n      _c(\"code\", [_vm._v(\"small=true\")]),\n      _vm._v(\" to the package.\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"uninstalling-the-specified-package\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#uninstalling-the-specified-package\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Uninstalling the specified package\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake require --uninstall tbox\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"remove-the-specified-package\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#remove-the-specified-package\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Remove the specified package\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake require --unlink tbox\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { attrs: { id: \"view-package-details\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#view-package-details\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" View package details\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake require --info tbox\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h6\",\n      { attrs: { id: \"search-for-packages-in-the-current-warehouse\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#search-for-packages-in-the-current-warehouse\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Search for packages in the current warehouse\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake require --search tbox\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake require --search pcr\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h6\",\n      { attrs: { id: \"list-the-currently-installed-packages\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#list-the-currently-installed-packages\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" List the currently installed packages\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake require --list\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h5\", { attrs: { id: \"warehouse-management-command-use\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#warehouse-management-command-use\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Warehouse Management Command Use\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ xmake repo --add myrepo git@github.com:myrepo/xmake-repo.git\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake repo --remove myrepo\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake repo --list\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"$ xmake repo -u\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h5\",\n      { attrs: { id: \"submit-the-package-to-the-official-warehouse\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#submit-the-package-to-the-official-warehouse\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Submit the package to the official warehouse\")\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}