{"remainingRequest":"/Users/ruki/projects/personal/tbox-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/ruki/projects/personal/tbox-docs/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/ruki/projects/personal/tbox-docs/docs/guide/index的副本.md?vue&type=template&id=08252036&","dependencies":[{"path":"/Users/ruki/projects/personal/tbox-docs/docs/guide/index的副本.md","mtime":1534123204890},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/cache-loader/dist/cjs.js","mtime":1541484124233},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/vue-loader/lib/index.js","mtime":1541484125571},{"path":"/Users/ruki/projects/personal/tbox-docs/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541484147168}],"contextDependencies":[],"result":["\n<div class=\"content\"><div align=\"center\">\n  <h1>tbox</h1>\n  <div>\n    <a href=\"https://travis-ci.org/tboox/tbox\">\n      <img src=\"https://img.shields.io/travis/tboox/tbox/master.svg?style=flat-square\" alt=\"travis-ci\" />\n    </a>\n    <a href=\"https://ci.appveyor.com/project/waruqi/tbox/branch/master\">\n      <img src=\"https://img.shields.io/appveyor/ci/waruqi/tbox/master.svg?style=flat-square\" alt=\"appveyor-ci\" />\n    </a>\n    <a href=\"https://codecov.io/gh/tboox/tbox\">\n      <img src=\"https://img.shields.io/codecov/c/github/tboox/tbox/master.svg?style=flat-square\" alt=\"Coverage\" />\n    </a>\n    <a href=\"https://github.com/tboox/tbox/releases\">\n      <img src=\"https://img.shields.io/github/release/tboox/tbox.svg?style=flat-square\" alt=\"Github All Releases\" />\n    </a>\n  </div>\n  <div>\n    <a href=\"https://github.com/tboox/tbox/blob/master/LICENSE.md\">\n      <img src=\"https://img.shields.io/github/license/tboox/tbox.svg?colorB=f48041&style=flat-square\" alt=\"license\" />\n    </a>\n    <a href=\"https://www.reddit.com/r/tboox/\">\n      <img src=\"https://img.shields.io/badge/chat-on%20reddit-ff3f34.svg?style=flat-square\" alt=\"Reddit\" />\n    </a>\n    <a href=\"https://gitter.im/tboox/tboox?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\">\n      <img src=\"https://img.shields.io/gitter/room/tboox/tboox.svg?style=flat-square&colorB=96c312\" alt=\"Gitter\" />\n    </a>\n    <a href=\"https://t.me/tbooxorg\">\n      <img src=\"https://img.shields.io/badge/chat-on%20telegram-blue.svg?style=flat-square\" alt=\"Telegram\" />\n    </a>\n    <a href=\"https://jq.qq.com/?_wv=1027&k=5hpwWFv\">\n      <img src=\"https://img.shields.io/badge/chat-on%20QQ-ff69b4.svg?style=flat-square\" alt=\"QQ\" />\n    </a>\n    <a href=\"http://tboox.org/donation/\">\n      <img src=\"https://img.shields.io/badge/donate-us-orange.svg?style=flat-square\" alt=\"Donate\" />\n    </a>\n  </div>\n  <p>A glib-like cross-platform C library</p>\n</div>\n<h2 id=\"introduction-中文\"><a class=\"header-anchor\" href=\"#introduction-中文\" aria-hidden=\"true\">#</a> Introduction (<router-link to=\"/README_zh.html\">中文</router-link>)</h2>\n<p>TBOX is a glib-like cross-platform C library that is simple to use yet powerful in nature.</p>\n<p>The project focuses on making C development easier and provides many modules (.e.g stream, coroutine, regex, container, algorithm ...),\nso that any developer can quickly pick it up and enjoy the productivity boost when developing in C language.</p>\n<p>It supports the following platforms:</p>\n<ul>\n<li>Windows</li>\n<li>Macosx</li>\n<li>Linux</li>\n<li>Android</li>\n<li>iOS</li>\n</ul>\n<p>And it provides many compiling options using <a href=\"http://www.xmake.io\" target=\"_blank\" rel=\"noopener noreferrer\">xmake<OutboundLink/></a>:</p>\n<ul>\n<li>Release: Disable debug information, assertion, memory checking and enable optimization.</li>\n<li>Debug: Enable debug information, assertion, memory checking and disable optimization.</li>\n<li>Small: Disable all extensional modules and enable space optimization.</li>\n<li>Micro: compiling micro library (~64K) for the embed system.</li>\n</ul>\n<p>If you want to know more, please refer to:</p>\n<ul>\n<li><a href=\"http://tboox.org\" target=\"_blank\" rel=\"noopener noreferrer\">HomePage<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/tbox/wiki/documents\" target=\"_blank\" rel=\"noopener noreferrer\">Documents<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/tbox\" target=\"_blank\" rel=\"noopener noreferrer\">Github<OutboundLink/></a></li>\n<li><a href=\"https://gitee.com/tboox/tbox\" target=\"_blank\" rel=\"noopener noreferrer\">Gitee<OutboundLink/></a></li>\n</ul>\n<h2 id=\"features\"><a class=\"header-anchor\" href=\"#features\" aria-hidden=\"true\">#</a> Features</h2>\n<h4 id=\"the-stream-library\"><a class=\"header-anchor\" href=\"#the-stream-library\" aria-hidden=\"true\">#</a> The stream library</h4>\n<ul>\n<li>Supports file, data, http and socket source</li>\n<li>Supports the stream filter for gzip, charset and...</li>\n<li>Implements stream transfer</li>\n<li>Implements the static buffer stream for parsing data</li>\n<li>Supports coroutine and implements asynchronous operation</li>\n</ul>\n<h4 id=\"the-coroutine-library\"><a class=\"header-anchor\" href=\"#the-coroutine-library\" aria-hidden=\"true\">#</a> The coroutine library</h4>\n<ul>\n<li>Provides high-performance coroutine switch(refer to <a href=\"http://tboox.org/2016/10/28/benchbox-coroutine/\" target=\"_blank\" rel=\"noopener noreferrer\">reports<OutboundLink/></a>)</li>\n<li>Supports arm, arm64, x86, x86_64 ..</li>\n<li>Provides channel interfaces</li>\n<li>Provides semaphore and lock interfaces</li>\n<li>Supports io socket and stream operation in coroutine</li>\n<li>Provides some io servers (http ..) using coroutine</li>\n<li>Provides stackfull and stackless coroutines</li>\n<li>Support epoll, kqueue, poll, select and IOCP</li>\n</ul>\n<h4 id=\"the-database-library\"><a class=\"header-anchor\" href=\"#the-database-library\" aria-hidden=\"true\">#</a> The database library</h4>\n<ul>\n<li>Supports mysql and sqlite3 database and enumerates data using the iterator mode</li>\n</ul>\n<h4 id=\"the-xml-parser-library\"><a class=\"header-anchor\" href=\"#the-xml-parser-library\" aria-hidden=\"true\">#</a> The xml parser library</h4>\n<ul>\n<li>Supports DOM and SAX mode and Supports xpath</li>\n</ul>\n<h4 id=\"the-serialization-and-deserialization-library\"><a class=\"header-anchor\" href=\"#the-serialization-and-deserialization-library\" aria-hidden=\"true\">#</a> The serialization and deserialization library</h4>\n<ul>\n<li>Supports xml, json, bplist, xplist, binary formats</li>\n</ul>\n<h4 id=\"the-memory-library\"><a class=\"header-anchor\" href=\"#the-memory-library\" aria-hidden=\"true\">#</a> The memory library</h4>\n<ul>\n<li>Implements some memory pools for optimizing memory</li>\n<li>Supports fast memory error detecting. it can detect the following types of bugs for the debug mode:\n<ul>\n<li>out-of-bounds accesses to heap and globals</li>\n<li>use-after-free</li>\n<li>double-free, invalid free</li>\n<li>memory leaks</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"the-container-library\"><a class=\"header-anchor\" href=\"#the-container-library\" aria-hidden=\"true\">#</a> The container library</h4>\n<ul>\n<li>Implements hash table, single list, double list, vector, stack, queue\nand min/max heap. Supports iterator mode for algorithm</li>\n</ul>\n<h4 id=\"the-algorithm-library\"><a class=\"header-anchor\" href=\"#the-algorithm-library\" aria-hidden=\"true\">#</a> The algorithm library</h4>\n<ul>\n<li>Uses the iterator mode</li>\n<li>Implements find, binary find and reverse find algorithm</li>\n<li>Implements sort, bubble sort, quick sort, heap sort and insert sort algorithm</li>\n<li>Implements count, walk items, reverse walk items, for_all and rfor_all</li>\n</ul>\n<h4 id=\"the-network-library\"><a class=\"header-anchor\" href=\"#the-network-library\" aria-hidden=\"true\">#</a> The network library</h4>\n<ul>\n<li>Implements dns(cached)</li>\n<li>Implements ssl(openssl, polarssl, mbedtls)</li>\n<li>Implements http</li>\n<li>Implements cookies</li>\n<li>Supports ipv4, ipv6</li>\n<li>Supports coroutine</li>\n</ul>\n<h4 id=\"the-platform-library\"><a class=\"header-anchor\" href=\"#the-platform-library\" aria-hidden=\"true\">#</a> The platform library</h4>\n<ul>\n<li>Implements timer, fast and low precision timer</li>\n<li>Implements atomic and atomic64 operation</li>\n<li>Implements spinlock, mutex, event, semaphore, thread and thread pool</li>\n<li>Implements file, socket operation</li>\n<li>Implements poller using epoll, poll, select, kqueue ...</li>\n<li>Implements switch context interfaces for coroutine</li>\n</ul>\n<h4 id=\"the-charset-library\"><a class=\"header-anchor\" href=\"#the-charset-library\" aria-hidden=\"true\">#</a> The charset library</h4>\n<ul>\n<li>Supports utf8, utf16, gbk, gb2312, uc2 and uc4</li>\n<li>Supports big endian and little endian mode</li>\n</ul>\n<h4 id=\"the-zip-library\"><a class=\"header-anchor\" href=\"#the-zip-library\" aria-hidden=\"true\">#</a> The zip library</h4>\n<ul>\n<li>Supports gzip, zlibraw, zlib formats using the zlib library if exists</li>\n<li>Implements lzsw, lz77 and rlc algorithm</li>\n</ul>\n<h4 id=\"the-utils-library\"><a class=\"header-anchor\" href=\"#the-utils-library\" aria-hidden=\"true\">#</a> The utils library</h4>\n<ul>\n<li>Implements base32, base64 encoder and decoder</li>\n<li>Implements assert and trace output for the debug mode</li>\n<li>Implements bits operation for parsing u8, u16, u32, u64 data</li>\n</ul>\n<h4 id=\"the-math-library\"><a class=\"header-anchor\" href=\"#the-math-library\" aria-hidden=\"true\">#</a> The math library</h4>\n<ul>\n<li>Implements random generator</li>\n<li>Implements fast fixed-point calculation, Supports 6-bits, 16-bits, 30-bits fixed-point number</li>\n</ul>\n<h4 id=\"the-libc-library\"><a class=\"header-anchor\" href=\"#the-libc-library\" aria-hidden=\"true\">#</a> The libc library</h4>\n<ul>\n<li>Implements lightweight libc library interfaces, the interface name contains <code>tb_xxx</code> prefix for avoiding conflict</li>\n<li>Implements strixxx strrxxx wcsixxx wcsrxxx interface extension</li>\n<li>Optimizes some frequently-used interface, .e.g. memset, memcpy, strcpy ...</li>\n<li>Implements <code>memset_u16</code>, <code>memset_u32</code>, <code>memset_u64</code> extension interfaces</li>\n</ul>\n<h4 id=\"the-libm-library\"><a class=\"header-anchor\" href=\"#the-libm-library\" aria-hidden=\"true\">#</a> The libm library</h4>\n<ul>\n<li>Implements lightweight libm library interfaces, the interface name contains <code>tb_xxx</code> prefix for avoiding conflict</li>\n<li>Supports float and double type</li>\n</ul>\n<h4 id=\"the-regex-library\"><a class=\"header-anchor\" href=\"#the-regex-library\" aria-hidden=\"true\">#</a> The regex library</h4>\n<ul>\n<li>Supports match and replace</li>\n<li>Supports global/multiline/caseless mode</li>\n<li>Uses pcre, pcre2 and posix regex modules</li>\n</ul>\n<h4 id=\"the-hash-library\"><a class=\"header-anchor\" href=\"#the-hash-library\" aria-hidden=\"true\">#</a> The hash library</h4>\n<ul>\n<li>Implements crc32, adler32, md5 and sha1 hash algorithm</li>\n<li>Implements some string hash algorithms (.e.g bkdr, fnv32, fnv64, sdbm, djb2, rshash, aphash ...)</li>\n<li>Implements uuid generator</li>\n</ul>\n<h2 id=\"projects\"><a class=\"header-anchor\" href=\"#projects\" aria-hidden=\"true\">#</a> Projects</h2>\n<p>Some projects using tbox:</p>\n<ul>\n<li><a href=\"https://github.com/tboox/gbox\" target=\"_blank\" rel=\"noopener noreferrer\">gbox<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/vm86\" target=\"_blank\" rel=\"noopener noreferrer\">vm86<OutboundLink/></a></li>\n<li><a href=\"http://www.xmake.io\" target=\"_blank\" rel=\"noopener noreferrer\">xmake<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/itrace\" target=\"_blank\" rel=\"noopener noreferrer\">itrace<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tboox/tbox/wiki/tbox-projects\" target=\"_blank\" rel=\"noopener noreferrer\">more<OutboundLink/></a></li>\n</ul>\n<h2 id=\"build\"><a class=\"header-anchor\" href=\"#build\" aria-hidden=\"true\">#</a> Build</h2>\n<p>Please install xmake first: <a href=\"https://github.com/tboox/xmake\" target=\"_blank\" rel=\"noopener noreferrer\">xmake<OutboundLink/></a></p>\n<!--beforebegin--><div class=\"language-console extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code># build for the host platform\n$ cd ./tbox\n$ xmake\n\n# build for the mingw platform\n$ cd ./tbox\n$ xmake f -p mingw --sdk=/home/mingwsdk \n$ xmake\n\n# build for the iphoneos platform\n$ cd ./tbox\n$ xmake f -p iphoneos \n$ xmake\n\n# build for the android platform\n$ cd ./tbox\n$ xmake f -p android --ndk=xxxxx\n$ xmake\n\n# build for the linux cross-platform\n$ cd ./tbox\n$ xmake f -p linux --sdk=/home/sdk # --bin=/home/sdk/bin\n$ xmake\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"example\"><a class=\"header-anchor\" href=\"#example\" aria-hidden=\"true\">#</a> Example</h2>\n<!--beforebegin--><div class=\"language-c extra-class\"><!--afterbegin--><pre v-pre class=\"language-c\"><code><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"tbox/tbox.h\"</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// init tbox</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">tb_init</span><span class=\"token punctuation\">(</span>tb_null<span class=\"token punctuation\">,</span> tb_null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// trace</span>\n    <span class=\"token function\">tb_trace_i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello tbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// init vector</span>\n    tb_vector_ref_t vector <span class=\"token operator\">=</span> <span class=\"token function\">tb_vector_init</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">tb_element_cstr</span><span class=\"token punctuation\">(</span>tb_true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// insert item</span>\n        <span class=\"token function\">tb_vector_insert_tail</span><span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">tb_vector_insert_tail</span><span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// dump all items</span>\n        tb_for_all <span class=\"token punctuation\">(</span>tb_char_t <span class=\"token keyword\">const</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> cstr<span class=\"token punctuation\">,</span> vector<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// trace</span>\n            <span class=\"token function\">tb_trace_i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> cstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// exit vector</span>\n        <span class=\"token function\">tb_vector_exit</span><span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// init stream</span>\n    tb_stream_ref_t stream <span class=\"token operator\">=</span> <span class=\"token function\">tb_stream_init_from_url</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.xxx.com/file.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// open stream</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">tb_stream_open</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// read line</span>\n            tb_long_t size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            tb_char_t line<span class=\"token punctuation\">[</span>TB_STREAM_BLOCK_MAXN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">=</span> <span class=\"token function\">tb_stream_bread_line</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// trace</span>\n                <span class=\"token function\">tb_trace_i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"line: %s\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// exit stream</span>\n        <span class=\"token function\">tb_stream_exit</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// wait </span>\n    <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// exit tbox</span>\n    <span class=\"token function\">tb_exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"contacts\"><a class=\"header-anchor\" href=\"#contacts\" aria-hidden=\"true\">#</a> Contacts</h2>\n<ul>\n<li>Email：<a href=\"mailto:waruqi@gmail.com\">waruqi@gmail.com</a></li>\n<li>Homepage：<a href=\"http://www.tboox.org\" target=\"_blank\" rel=\"noopener noreferrer\">tboox.org<OutboundLink/></a></li>\n<li>Community：<a href=\"https://www.reddit.com/r/tboox/\" target=\"_blank\" rel=\"noopener noreferrer\">/r/tboox on reddit<OutboundLink/></a></li>\n</ul>\n</div>\n",null]}